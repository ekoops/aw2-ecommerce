version: "3.9"

services:
  zookeeper:
    image: zookeeper:latest
    restart: always
    # environment:
    #   ZOOKEEPER_CLIENT_PORT: 2181
    #   ZOOKEEPER_TICK_TIME: 2000
    container_name: zookeeper
    #    ports:
    #      - "2181:2181"
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
      - zookeeper-logs:/logs
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: kafka
    #    ports:
    #      - "9092:9092"
    env_file:
      - configs/kafka.env.prod
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-net
      - communication-net
    depends_on:
      - zookeeper
    # environment:
    #   KAFKA_BROKER_ID: 1
    #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    #   KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    #   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-connect:
    image: debezium/connect
    container_name: kafka-connect
    ports:
     - "8083:8083"
    env_file:
     - configs/kafka-connect.env.prod
    networks:
     - kafka-net
     - order-net
    depends_on:
     - kafka
     - zookeeper
#     - order-db-rs0-1
#     - order-db-rs0-2
#     - order-db-rs0-3